# Generated by Django 4.2 on 2024-10-10 10:54

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, unique=True, verbose_name='action')),
                ('note', models.CharField(default='No Note', max_length=50, verbose_name='Note')),
            ],
        ),
        migrations.CreateModel(
            name='End_User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='End_User')),
                ('phone', models.CharField(max_length=25, verbose_name='Phone')),
                ('email', models.EmailField(blank=True, max_length=50, null=True, verbose_name='Email')),
                ('note', models.CharField(default='No Note', max_length=50, verbose_name='User_Note')),
            ],
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, unique=True, verbose_name='issue')),
                ('note', models.CharField(default='No Note', max_length=50, verbose_name='Note')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('barcode', models.CharField(max_length=50, unique=True, verbose_name='Barcode')),
                ('des', models.CharField(max_length=200, verbose_name='Description')),
                ('color', models.CharField(max_length=50, verbose_name='Color')),
                ('brand', models.CharField(max_length=50, verbose_name='Brand')),
                ('sku', models.CharField(max_length=50, verbose_name='Sku')),
                ('note', models.CharField(default='No Note', max_length=50, verbose_name='Note')),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch', models.CharField(choices=[('Cairo', 'Cairo'), ('Alex', 'Alex'), ('Asyut', 'Asyut')], default=('Cairo', 'Cairo'), max_length=50, verbose_name='Req_Branch')),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Done', 'Done'), ('Delivered', 'Delivered')], default=('Pending', 'Pending'), max_length=50, verbose_name='Req_Status')),
                ('client', models.CharField(choices=[('End_User', 'End_User'), ('I_R_Client', 'I_R_Client'), ('O_R_Client', 'O_R_Client'), ('Out_Source', 'Out_Source')], default=('Pending', 'Pending'), max_length=50, verbose_name='client_kind')),
                ('received_date', models.DateField(default=django.utils.timezone.now, verbose_name='Received_Date')),
                ('note', models.CharField(default='No_Note', max_length=50, verbose_name='Note')),
                ('End_User', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Request_client', to='Technical.end_user', verbose_name='Client_Name')),
            ],
        ),
        migrations.CreateModel(
            name='SpareName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Part_Name', models.CharField(max_length=25, unique=True, verbose_name='Part')),
            ],
            options={
                'verbose_name_plural': 'SparePart',
            },
        ),
        migrations.CreateModel(
            name='Technician',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, unique=True, verbose_name='technician')),
                ('note', models.CharField(default='No Note', max_length=50, verbose_name='Note')),
            ],
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='company')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='Vendor', verbose_name='Logo')),
                ('note', models.CharField(default='No Note', max_length=50, verbose_name='Note')),
            ],
        ),
        migrations.CreateModel(
            name='SpareItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial', models.CharField(max_length=30, unique=True, verbose_name='Serial')),
                ('Status_1', models.BooleanField(default=False, verbose_name='Status')),
                ('Status_2', models.BooleanField(default=False, verbose_name='Status')),
                ('Status_3', models.BooleanField(default=False, verbose_name='Status')),
                ('Status_4', models.BooleanField(default=False, verbose_name='Status')),
                ('Status_5', models.BooleanField(default=False, verbose_name='Status')),
                ('Status_6', models.BooleanField(default=False, verbose_name='Status')),
                ('Status_7', models.BooleanField(default=False, verbose_name='Status')),
                ('Status_8', models.BooleanField(default=False, verbose_name='Status')),
                ('note', models.CharField(default='No Note', max_length=50, verbose_name='Note')),
                ('Spare_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='SpareName1', to='Technical.sparename', verbose_name='Spare')),
                ('Spare_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='SpareName2', to='Technical.sparename', verbose_name='Spare')),
                ('Spare_3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='SpareName3', to='Technical.sparename', verbose_name='Spare')),
                ('Spare_4', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='SpareName4', to='Technical.sparename', verbose_name='Spare')),
                ('Spare_5', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='SpareName5', to='Technical.sparename', verbose_name='Spare')),
                ('Spare_6', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='SpareName6', to='Technical.sparename', verbose_name='Spare')),
                ('Spare_7', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='SpareName7', to='Technical.sparename', verbose_name='Spare')),
                ('Spare_8', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='SpareName8', to='Technical.sparename', verbose_name='Spare')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='SpareItem_Product', to='Technical.product', verbose_name='Product')),
            ],
            options={
                'verbose_name_plural': 'SpareItem',
            },
        ),
        migrations.CreateModel(
            name='SpareAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=100, verbose_name='Action')),
                ('note', models.CharField(default='No Note', max_length=50, verbose_name='Note')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='SpareAction_Detail', to='Technical.request', verbose_name='Request')),
                ('serial', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='SpareItem', to='Technical.spareitem', verbose_name='serial')),
            ],
            options={
                'verbose_name_plural': 'SpareAction',
            },
        ),
        migrations.AddField(
            model_name='request',
            name='Vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='Request_Vendor', to='Technical.vendor', verbose_name='Vendor'),
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_out', models.CharField(blank=True, max_length=50, null=True, verbose_name='S.N_Out')),
                ('complain', models.TextField(max_length=500, verbose_name='Complain')),
                ('Report', models.TextField(max_length=500, verbose_name='Report')),
                ('advice', models.TextField(max_length=500, verbose_name='Advice')),
                ('note', models.CharField(max_length=50, verbose_name='Note')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Report_Product', to='Technical.product', verbose_name='Product')),
                ('request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='request_Report', to='Technical.request', verbose_name='Request')),
            ],
        ),
        migrations.CreateModel(
            name='Follow_Up',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('connect', models.CharField(choices=[('Phone', 'Phone'), ('WatsApp', 'WatsApp'), ('Messenger', 'Messenger')], default=('Pending', 'Pending'), max_length=50, verbose_name='Connect')),
                ('msg_kind', models.CharField(choices=[('Pending_MSG', 'Pending_MSG'), ('Done_MSG', 'Done_MSG'), ('Delivered_MSG', 'Delivered_MSG'), ('FollowUP_MSG', 'FollowUP_MSG')], default=('راضى', 'راضى'), max_length=50, verbose_name='Message')),
                ('comment', models.TextField(blank=True, max_length=500, null=True, verbose_name='Comment')),
                ('rate', models.CharField(choices=[('راضى', 'راضى'), ('غير_راضى', 'غير_راضى'), ('يحتاج_تطوير', 'يحتاج_تطوير')], default=('راضى', 'راضى'), max_length=50, verbose_name='Rate')),
                ('note', models.CharField(default='No Note', max_length=50, verbose_name='Note')),
                ('request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='request_Follow_Up', to='Technical.request', verbose_name='Request')),
            ],
            options={
                'verbose_name_plural': 'Follow_Up',
            },
        ),
        migrations.CreateModel(
            name='Failer_Detail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_in', models.CharField(max_length=25, verbose_name='S.N_IN')),
                ('active', models.CharField(choices=[('In_Warranty', 'In_Warranty'), ('Out_Warranty', 'Out_Warranty')], default=('In_Warranty', 'In_Warranty'), max_length=25, verbose_name='Active')),
                ('purchase_date', models.DateField(blank=True, null=True, verbose_name='Purchase_Date')),
                ('invoice', models.ImageField(blank=True, null=True, upload_to='Invoice', verbose_name='invoice')),
                ('detail', models.CharField(default='Write Issue Detail', max_length=300, verbose_name='Detail')),
                ('ref', models.CharField(default='No_Ref', max_length=25, verbose_name='REF_NUM')),
                ('note', models.CharField(default='No_Note', max_length=50, verbose_name='Note')),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='Issue_name', to='Technical.issue', verbose_name='Issue')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='Failer_Detail_Product', to='Technical.product', verbose_name='Product')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='request_Failer_Detail', to='Technical.request', verbose_name='Request')),
            ],
        ),
        migrations.CreateModel(
            name='Action_Detail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_out', models.CharField(max_length=50, verbose_name='S.N_Out')),
                ('detail', models.CharField(default='Write Action Detail', max_length=300, verbose_name='Detail')),
                ('delivery_date', models.DateField(blank=True, null=True, verbose_name='Delivery_Date')),
                ('cost', models.IntegerField(default=0, verbose_name='Cost')),
                ('last_serial', models.CharField(default='No Serail', max_length=50, verbose_name='last_S.N')),
                ('ref', models.CharField(default='No_Ref', max_length=25, verbose_name='REF_NUM')),
                ('note', models.CharField(default='No Note', max_length=50, verbose_name='Note')),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='Action_name', to='Technical.action', verbose_name='Action')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='Action_Detail_Product', to='Technical.product', verbose_name='Product')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='request_Action_Detail', to='Technical.request', verbose_name='Request')),
                ('technician', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='Action_Technician', to='Technical.technician', verbose_name='Technician')),
            ],
        ),
    ]
